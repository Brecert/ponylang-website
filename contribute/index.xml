<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Contributes on Pony</title>
    <link>//www.ponylang.org/contribute/index.xml</link>
    <description>Recent content in Contributes on Pony</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Pony Developers</copyright>
    <atom:link href="//www.ponylang.org/contribute/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Contribute</title>
      <link>//www.ponylang.org/contribute/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//www.ponylang.org/contribute/</guid>
      <description>

&lt;p&gt;Interested in helping develop Pony? Awesome. We could use the help. Here&amp;rsquo;s a list of projects that are currently underway that you can assist with. If none of them interest you, drop a note to the &lt;a href=&#34;https://pony.groups.io/g/dev&#34;&gt;pony+dev mailing list&lt;/a&gt; and we should be able to find something that suits your interests.&lt;/p&gt;

&lt;p&gt;Note sure where to start?&lt;/p&gt;

&lt;p&gt;If you are new to Pony or don&amp;rsquo;t have a ton of time to devote to helping, we suggest you check out Project Documentation and helping to improve our docs. Contributing to documentation is a great way to start learning Pony. Teaching a subject is an incredible way to learn the subject.&lt;/p&gt;

&lt;p&gt;If you are new to Pony and have more time to devote, check out the Low Hanging Fruit. Tackle stuff from that and if we run out, switch over to helping with documentation.&lt;/p&gt;

&lt;p&gt;If are a bit more experienced with Pony then it might be time to get involved with triaging incoming issues. Not only will triaging help move the project forward but its a common first step towards becoming a Pony committer.&lt;/p&gt;

&lt;h2 id=&#34;triage-incoming-issues&#34;&gt;Triage incoming issues&lt;/h2&gt;

&lt;p&gt;Users regularly open issues against the &lt;a href=&#34;https://github.com/ponylang/ponyc/issues&#34;&gt;ponyc repository&lt;/a&gt;. Staying on top of them and moving them along to a conclusion is an important part of the development process. If you&amp;rsquo;d be interested in helping in this area, please check out our &lt;a href=&#34;triage&#34;&gt;triaging ponyc documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;project-documentation&#34;&gt;Project Documentation&lt;/h2&gt;

&lt;p&gt;Documentation is the life blood of an Open Source project. It makes it easier for get new users up and running with the language. Our ability to grow Pony usage will be directly tied to the quality and breadth of our documentation. Assisting with adding documentation for Pony is a great way to get started helping out with Pony. Check out &lt;a href=&#34;project-documentation&#34;&gt;Project Documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;low-hanging-fruit&#34;&gt;Low Hanging Fruit&lt;/h2&gt;

&lt;p&gt;When issues come into the ponyc GitHub project, as part of our initial triaging of issues, some get marked as easy. The general idea behind the easy label to make it simple for people who want to contribute to Pony but don&amp;rsquo;t have much time or knowledge about Pony to be able to contribute. Low hanging fruit issues such as these are a great way to get started with contributing and start learning more about Pony. Check out the &lt;a href=&#34;https://github.com/ponylang/ponyc/issues?q=is:issue+is:open+label:%22difficulty:+1+-+easy%22&#34;&gt;Low Hanging Fruit&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Project Documentation</title>
      <link>//www.ponylang.org/contribute/project-documentation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//www.ponylang.org/contribute/project-documentation/</guid>
      <description>

&lt;p&gt;There&amp;rsquo;s currently a small project underway to improve Pony documentation. We have a few initial aims&lt;/p&gt;

&lt;h2 id=&#34;standard-library-documentation-improvements&#34;&gt;Standard Library Documentation Improvements&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Add documentation in the form of docstrings to the standard libraries&lt;/li&gt;
&lt;li&gt;Add examples of usage to package level docstrings&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;generated-documentations-improvements&#34;&gt;Generated Documentations Improvements&lt;/h2&gt;

&lt;p&gt;The current generated documentation is hard to parse and could use a facelift in terms of layout and formatting. In addition to changes that would impact the content layout itself,  the MkDocs theme that is currently used has issues with the sidebar functioning in a very frustrating fashion. It doesn&amp;rsquo;t keep the sidebar focused on content you are viewing. It doesn&amp;rsquo;t highlight the correct menu item if you deep link into documentation. And several other issues as well. Lastly, generated documentation isn&amp;rsquo;t online. New pony users have to get pony installed and generate the documentation themselves. That results in multiple hurdles.&lt;/p&gt;

&lt;p&gt;We want to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Get docs building automatically on each commit and hosted at ReadTheDocs.&lt;/li&gt;
&lt;li&gt;Switch to the Read the docs theme that solves the sidebar issues (MkDocs is a pale imitation)&lt;/li&gt;
&lt;li&gt;Improve the layout and formatting of documentation itself.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;improving-examples&#34;&gt;Improving Examples&lt;/h2&gt;

&lt;p&gt;The examples that come with Pony are often not idiomatic. One of the ways people are going to learn is to copy code from examples into what they are trying to accomplish. It behooves us to make sure that the examples are of the highest quality. Idiomatic, with comments, without performance anti-patterns etc. We need to undertake a general cleanup of existing examples and writing up a guide for people looking to contribute other examples.&lt;/p&gt;

&lt;h2 id=&#34;improving-the-tutorial&#34;&gt;Improving the Tutorial&lt;/h2&gt;

&lt;p&gt;There&amp;rsquo;s plenty that people bring up as needing improvement/missing from the Tutorial.&lt;/p&gt;

&lt;p&gt;If you are interested in working on this project, please contact Sean T Allen &lt;a href=&#34;mailto:sean@monkeysnatchbanana.com&#34;&gt;sean@monkeysnatchbanana.com&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Triaging Ponyc</title>
      <link>//www.ponylang.org/contribute/triage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//www.ponylang.org/contribute/triage/</guid>
      <description>

&lt;h2 id=&#34;for-anyone&#34;&gt;For anyone&lt;/h2&gt;

&lt;p&gt;The vast majority of the triaging process can be done by any member of the community, all of the following steps require no special commit access to the &lt;code&gt;ponyc&lt;/code&gt; repo.&lt;/p&gt;

&lt;h3 id=&#34;request-missing-relevant-information&#34;&gt;Request missing relevant information&lt;/h3&gt;

&lt;p&gt;Has the user reported all information that might be needed to diagnose? It can be very hard to diagnose issues if relevant details are missing.&lt;/p&gt;

&lt;p&gt;Commonly needed information includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Source code that demonstrates the problem&lt;/li&gt;
&lt;li&gt;Did they install from a package or source?&lt;/li&gt;
&lt;li&gt;What version or commit are they using?&lt;/li&gt;
&lt;li&gt;What platform are they on? Linux, FreeBSD, OSX?&lt;/li&gt;
&lt;li&gt;What version of the platform? If Linux, what distribution?&lt;/li&gt;
&lt;li&gt;What version of LLVM are they using?&lt;/li&gt;
&lt;li&gt;What compiler including version?&lt;/li&gt;
&lt;li&gt;What linker including version?&lt;/li&gt;
&lt;li&gt;If they built from source, what options did they use?&lt;/li&gt;
&lt;li&gt;Are they running a release or debug build of the compiler?&lt;/li&gt;
&lt;li&gt;Are they running debug version of their program?&lt;/li&gt;
&lt;li&gt;What CPU are they running on?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Mind you, answers to every one of the questions aren&amp;rsquo;t required. As you become a better at triaging, you&amp;rsquo;ll develop a sense of which questions are required for different sorts of problems.&lt;/p&gt;

&lt;h3 id=&#34;verify-the-issue&#34;&gt;Verify the issue&lt;/h3&gt;

&lt;p&gt;Can you reproduce? It&amp;rsquo;s an important first step. A user is going to be reporting a problem on a specific platform. Can you reproduce using that platform? Can you reproduce on another?&lt;/p&gt;

&lt;p&gt;If a Debian Linux user reports a bug, it&amp;rsquo;s very helpful to know if it impacts other platforms such as OSX. We want to find out how broad the bug is based on any of the following relevant factors:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;OS, distribution, and version&lt;/li&gt;
&lt;li&gt;LLVM version&lt;/li&gt;
&lt;li&gt;Pony version&lt;/li&gt;
&lt;li&gt;Compiler version&lt;/li&gt;
&lt;li&gt;Linker version&lt;/li&gt;
&lt;li&gt;CPU&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;find-a-minimal-case&#34;&gt;Find a minimal case&lt;/h3&gt;

&lt;p&gt;Users will often provide source code to demonstrate the problem they are experiencing that is rather expansive in scope. The smaller the scope of the source code, usually the easier it will be to locate the problem. See if you can find a smaller minimal case than what has currently been provided.&lt;/p&gt;

&lt;h3 id=&#34;locate-the-regression-point&#34;&gt;Locate the regression point&lt;/h3&gt;

&lt;p&gt;Not every problem a user reports will be caused by a bug introduced in &lt;code&gt;ponyc&lt;/code&gt;. Some will be bugs in LLVM, Clang, GCC, the OS and what not. However, many bugs will be in &lt;code&gt;ponyc&lt;/code&gt;, for these bugs, locating the point the bug was introduced vastly speed up the time to diagnose and fix.&lt;/p&gt;

&lt;p&gt;Git-bisect is an amazing tool for tracking down when a regression was introduced. If you aren&amp;rsquo;t familiar with git-bisect, it&amp;rsquo;s a great tool to learn and will serve you well as a developer. Even without git-bisect, you can still locate a regression point. The process goes something like this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a minimal example that easily demonstrates the problem.&lt;/li&gt;
&lt;li&gt;Pick a commit from the past.&lt;/li&gt;
&lt;li&gt;Build &lt;code&gt;ponyc&lt;/code&gt; from that commit&lt;/li&gt;
&lt;li&gt;Run the minimal example and see if the bug still exists&lt;/li&gt;
&lt;li&gt;If it does, move to an earlier and repeat&lt;/li&gt;
&lt;li&gt;If it doesn&amp;rsquo;t, move to a later commit and repeat&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Through the above process, you can often find when a regression was introduced. If you are able to, report the commit on the issue.&lt;/p&gt;

&lt;h3 id=&#34;find-related-issues&#34;&gt;Find related issues&lt;/h3&gt;

&lt;p&gt;There might be existing open or closed issues that relevant to this issue.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If the problem has already been fixed in a later version, you can note that on the issue.&lt;/li&gt;
&lt;li&gt;If workaround documentation exists, point the user to that documentation.&lt;/li&gt;
&lt;li&gt;If there are open (or closed) issues that you think are similar and they might shed light on the issue, note those issues (with issue numbers).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;domain-experts&#34;&gt;@ domain experts&lt;/h3&gt;

&lt;p&gt;Do you know of someone who should be able to help diagnose the problem? @ them on the issue to draw it to their attention.&lt;/p&gt;

&lt;h2 id=&#34;for-committers&#34;&gt;For committers&lt;/h2&gt;

&lt;p&gt;There&amp;rsquo;s only one additional step that committers can perform to help move the triaging process forward. Provide the proper labels on the issue. Below, we discuss the important triaging related labels.&lt;/p&gt;

&lt;h3 id=&#34;needs-discussion-during-sync&#34;&gt;needs discussion during sync&lt;/h3&gt;

&lt;p&gt;The agenda for each Pony development weekly sync is determined by looking for any issues, PRs etc that have the &amp;ldquo;needs discussion during sync&amp;rdquo; label. Anytime something happens with an issue that makes it one we should discuss during the sync, apply this label. By the same token, if an update was made to the issue that eliminates the need for discussion, remove the label.&lt;/p&gt;

&lt;p&gt;Common reasons for adding the label include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You are doing initial triaging on an issue and are unsure of if its a bug or not.&lt;/li&gt;
&lt;li&gt;You are doing initial triaging, are certain it&amp;rsquo;s a bug but are unsure of what the fix is.&lt;/li&gt;
&lt;li&gt;An action required comment has been addressed. For example, the user supplied additional requested information.&lt;/li&gt;
&lt;li&gt;You think the issue needs discussion at the sync&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Common reasons for removing the tag include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The issue has just been discussed at the sync and additional action is required. A comment regarding action required would have been added to the ticket.&lt;/li&gt;
&lt;li&gt;It has been determined that additional information is required before moving forward.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;bug&#34;&gt;bug - *&lt;/h3&gt;

&lt;p&gt;If it has been determined that the issue is, in fact, a bug, one of the following labels should be applied:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;bug - needs investigation&lt;/em&gt;: the cause of the bug is unknown. If the issue needs to be discussed during the sync, the &amp;ldquo;needs discussion during sync&amp;rdquo; label should also be added as well.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;bug - needs discussion&lt;/em&gt;: the cause of the bug is known and discussion is needed to come up with a fix. If the discussion should happen during the sync as well as on the issue, the &amp;ldquo;needs discussion during sync&amp;rdquo; label should be added as well.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;bug - ready for work&lt;/em&gt;: someone could start working on fixing the issue.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;bug - in progress&lt;/em&gt;: someone has already started working on fixing the issue.&lt;/p&gt;

&lt;h3 id=&#34;enhancement&#34;&gt;enhancement - *&lt;/h3&gt;

&lt;p&gt;The issue isn&amp;rsquo;t a bug but a request for new functionality. If the new functionality meets our RFC criteria then the issue should be politely closed and the user directed to the RFC process. It&amp;rsquo;s important to explain why the enhancement requires an RFC. Be sure to add the &amp;ldquo;turn into rfc&amp;rdquo; label as well. If the enhancement doesn&amp;rsquo;t require an RFC, the correct &amp;ldquo;enhancement - *&amp;rdquo; label should be applied.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;enhancement - needs discussion&lt;/em&gt; should be applied if an additional conversation is required. If that discussion should happen not just on the issue but during the sync call, be sure to add the &amp;ldquo;needs discussion during sync&amp;rdquo; label.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;enhancement - ready for work&lt;/em&gt; should be applied if the enhancement is already fully scoped and someone could start work on it. If you are able to, assign the proper difficulty and priority. If you aren&amp;rsquo;t able to assign a difficulty and priority, add the &amp;ldquo;needs discussion during sync&amp;rdquo; label so difficulty and priority can be discussed.&lt;/p&gt;

&lt;h3 id=&#34;difficulty&#34;&gt;difficulty - *&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;difficulty - easy&lt;/em&gt; should be applied if the issue is one that someone with minimal knowledge of Pony can tackle.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;difficulty - hard&lt;/em&gt; should be applied if the issue is one that requires deep knowledge of some aspect of Pony and its runtime.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;difficulty - medium&lt;/em&gt; should be applied if the issue doesn&amp;rsquo;t meet the definition of easy or hard.&lt;/p&gt;

&lt;h3 id=&#34;priority&#34;&gt;priority - *&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;priority - high&lt;/em&gt; should be applied if the resolution of the issue triggers a Pony release. This label is generally only applied to severe bugs.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;priority - medium&lt;/em&gt; should be applied to issues we would like to handled in the not so distant future.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;priority - low&lt;/em&gt; is applied when there is no pressing need for the issue to be resolved. If it happens in a week, great. A month? ok. A year? alrighty!&lt;/p&gt;

&lt;p&gt;Generally, most enhancements will be either medium or low priority.&lt;/p&gt;

&lt;h3 id=&#34;duplicate&#34;&gt;duplicate&lt;/h3&gt;

&lt;p&gt;The bug is a duplicate of an existing issue. The issue number that it duplicates should be noted, the label applied and the issue closed. In general, it&amp;rsquo;s a good idea to get confirmation that the issue is actually a duplicate before closing.&lt;/p&gt;

&lt;h3 id=&#34;wont-fix&#34;&gt;wont fix&lt;/h3&gt;

&lt;p&gt;The bug is one that we can&amp;rsquo;t or won&amp;rsquo;t fix. It is highly unlikely this would ever be applied during triaging.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>