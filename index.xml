<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pony</title>
    <link>http://www.ponylang.org/index.xml</link>
    <description>Recent content on Pony</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Pony Developers</copyright>
    <lastBuildDate>Wed, 05 Apr 2017 10:43:57 -0400</lastBuildDate>
    <atom:link href="http://www.ponylang.org/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Last Week in Pony - April 3, 2017</title>
      <link>http://www.ponylang.org/blog/2017/04/last-week-in-pony/</link>
      <pubDate>Wed, 05 Apr 2017 10:43:57 -0400</pubDate>
      
      <guid>http://www.ponylang.org/blog/2017/04/last-week-in-pony/</guid>
      <description>&lt;p&gt;Last Week In Pony is a weekly blog post to catch you up on the latest news for
the Pony programming language. To learn more about Pony check out &lt;a href=&#34;ponylang.org&#34;&gt;our website&lt;/a&gt;, our Twitter account &lt;a href=&#34;https://twitter.com/ponylang&#34;&gt;@ponylang&lt;/a&gt;, our &lt;a href=&#34;https://pony.groups.io/g/user&#34;&gt;users&amp;rsquo; mailing list&lt;/a&gt; or join us &lt;a href=&#34;https://webchat.freenode.net/?channels=%23ponylang&#34;&gt;on IRC&lt;/a&gt;.
&lt;/p&gt;

&lt;h2 id=&#34;items-of-note&#34;&gt;Items of note&lt;/h2&gt;

&lt;h3 id=&#34;releases-galore&#34;&gt;Releases galore!&lt;/h3&gt;

&lt;p&gt;There were several &amp;ldquo;point&amp;rdquo; releases last week. For a list of full releases see the &lt;a href=&#34;http://www.ponylang.org/categories/release/&#34;&gt;releases page&lt;/a&gt;. If you are running on Windows, it is recommended that you update to &lt;a href=&#34;http://www.ponylang.org/blog/2017/04/0.12.3-released/&#34;&gt;0.12.3&lt;/a&gt; as soon as possible. For those on developing on other platforms, upgrading to at least &lt;a href=&#34;http://www.ponylang.org/blog/2017/04/0.12.1-released/&#34;&gt;0.12.1&lt;/a&gt; as soon as possible is recommended.&lt;/p&gt;

&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;http://www.ponylang.org/blog/2017/04/0.12.3-released/&#34;&gt;Version 0.12.3&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Update recommended for Windows users.
&lt;br /&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://www.ponylang.org/blog/2017/04/0.12.2-released/&#34;&gt;Version 0.12.2&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Update recommended for Windows users.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://www.ponylang.org/blog/2017/04/0.12.1-released/&#34;&gt;Version 0.12.1&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Update recommended all users.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://www.ponylang.org/blog/2017/04/0.12.0-released/&#34;&gt;Version 0.12.0&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Update recommended for all users.&lt;/dd&gt;
&lt;/dl&gt;

&lt;h2 id=&#34;news-and-blog-posts&#34;&gt;News and Blog Posts&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://docs.google.com/forms/d/e/1FAIpQLScBNr5dPPCVYchRukAm-sFR3wipndVJiua3xHr8CslohVFRlg/viewform?c=0&amp;amp;w=1&amp;amp;usp=send_form&#34;&gt;Pony Community Survey&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.ponylang.org/&#34;&gt;New Website Layout&lt;/a&gt; Ponylang.org got an update, as well as an official place for the &lt;a href=&#34;http://www.ponylang.org/blog/&#34;&gt;Pony blog&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://pony-playpen.lietar.net/&#34;&gt;Pony Play Pen!&lt;/a&gt; Pony now has a live, browser-accessible sandbox.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://pony.groups.io/g/dev/files/Pony%20Sync/March%2029,%202017&#34;&gt;Developer Sync Meeting&lt;/a&gt; This weeks developer sync meeting.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/jtfmumm/acolyte&#34;&gt;Acolyte&lt;/a&gt; A procedurally generated RPG inspired by Rogue and written in Pony.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;rfcs&#34;&gt;RFCs&lt;/h2&gt;

&lt;p&gt;Interested in making a change, or keeping up with changes to Pony? Check out the &lt;a href=&#34;https://github.com/ponylang/rfcs&#34;&gt;RFC repo&lt;/a&gt;. Contributors welcome!&lt;/p&gt;

&lt;h3 id=&#34;approved-rfcs&#34;&gt;Approved RFCs&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ponylang/rfcs/pull/85&#34;&gt;Add a TCPConnectNotify.received times parameter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ponylang/rfcs/pull/86&#34;&gt;Add RFC for exhaustive match.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ponylang/rfcs/pull/82&#34;&gt;Explicit Partial Call&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ponylang/rfcs/pull/86&#34;&gt;Exhaustive Pattern Matching&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;new-rfcs&#34;&gt;New RFCs&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ponylang/rfcs/issues/89&#34;&gt;Pipeline or Extension Methods?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>0.12.3 released</title>
      <link>http://www.ponylang.org/blog/2017/04/0.12.3-released/</link>
      <pubDate>Sat, 01 Apr 2017 14:02:54 -0400</pubDate>
      
      <guid>http://www.ponylang.org/blog/2017/04/0.12.3-released/</guid>
      <description>&lt;p&gt;If you aren&amp;rsquo;t running Pony on Windows, you can ignore this version and stick with 0.12.2. Windows users are advised to upgrade as soon as possible if they are experiencing problems building binaries with the Pony compiler.
&lt;/p&gt;

&lt;p&gt;Prior to &lt;a href=&#34;https://github.com/ponylang/ponyc/pull/1794&#34;&gt;PR #1794&lt;/a&gt;, &lt;code&gt;ponyc&lt;/code&gt; would only look for a linker from the version of Visual Studio with which it was compiled, and only looked at one registry key for install information. A recent change (&lt;a href=&#34;https://github.com/ponylang/ponyc/commit/44b2d56c5618142fe0fd628eeadbd5975157d62f&#34;&gt;44b2d56&lt;/a&gt;) broke support for Visual Build Tools C++ 2015.&lt;/p&gt;

&lt;h3 id=&#34;fixed&#34;&gt;Fixed&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Improve Visual Studio and Microsoft C++ Build Tools detection. (PR #1794)&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>0.12.2 released</title>
      <link>http://www.ponylang.org/blog/2017/03/0.12.2-released/</link>
      <pubDate>Thu, 30 Mar 2017 20:07:23 -0400</pubDate>
      
      <guid>http://www.ponylang.org/blog/2017/03/0.12.2-released/</guid>
      <description>&lt;p&gt;Thanks to Gordon Tisher for finding the cause of our extreme busy wait problem on Windows and issuing a fix for it. We consider that a high priority issue which means, release away. Since it&amp;rsquo;s only been a day since our last release, not a lot else in this one.
&lt;/p&gt;

&lt;p&gt;Windows, Debian and RedHat packages are available via Bintray. OSX via Homebrew should be coming soon.&lt;/p&gt;

&lt;h3 id=&#34;fixed&#34;&gt;Fixed&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Fix extreme CPU use in scheduler on Windows (PR #1785)&lt;/li&gt;
&lt;li&gt;Fix broken ponytest &amp;ldquo;only&amp;rdquo; filter (PR #1780)&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>0.12.1 released</title>
      <link>http://www.ponylang.org/blog/2017/03/0.12.1-released/</link>
      <pubDate>Wed, 29 Mar 2017 23:27:25 -0400</pubDate>
      
      <guid>http://www.ponylang.org/blog/2017/03/0.12.1-released/</guid>
      <description>&lt;p&gt;This is a recommended update; 0.12.0 broke ponytest. No tests will run using 0.12.0. Upgrading to 0.12.1 immediately is advised.
&lt;/p&gt;

&lt;h3 id=&#34;fixed&#34;&gt;Fixed&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Bug in ponytest resulted in all tests being skipped (PR #1778)&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>0.12.0 released</title>
      <link>http://www.ponylang.org/blog/2017/03/0.12.0-released/</link>
      <pubDate>Wed, 29 Mar 2017 20:03:10 -0400</pubDate>
      
      <guid>http://www.ponylang.org/blog/2017/03/0.12.0-released/</guid>
      <description>&lt;p&gt;Pony version 0.12.0 has been released. It&amp;rsquo;s available via all the usual channels. This is a recommended update as &lt;a href=&#34;https://github.com/ponylang/ponyc/pull/1768&#34;&gt;PR #1768&lt;/a&gt; fixed a memory related issue that could result in nastiness.
&lt;/p&gt;

&lt;p&gt;The release also features a breaking change in the form of &lt;a href=&#34;https://github.com/ponylang/ponyc/pull/1741&#34;&gt;PR #1741&lt;/a&gt; which implemented the &amp;ldquo;Array as Sequences&amp;rdquo; RFC. It changes the syntax for creating arrays from: &lt;code&gt;[&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]&lt;/code&gt; to: &lt;code&gt;[&#39;a&#39;; &#39;b&#39;; &#39;c&#39;]&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;

&lt;h3 id=&#34;fixed&#34;&gt;Fixed&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Don&amp;rsquo;t ignore buffer length when printing (&lt;a href=&#34;https://github.com/ponylang/ponyc/pull/1768&#34;&gt;PR #1768&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Ifdef out ANSITerm signal handler for SIGWINCH (&lt;a href=&#34;https://github.com/ponylang/ponyc/pull/1763&#34;&gt;PR #1763&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fix build error on 32 bits systems (&lt;a href=&#34;https://github.com/ponylang/ponyc/pull/1762&#34;&gt;PR #1762&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fix annotation-related compiler assertion failure (issue #1751) (&lt;a href=&#34;https://github.com/ponylang/ponyc/pull/1757&#34;&gt;PR #1757&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Improve packaged Linux binary performance (&lt;a href=&#34;https://github.com/ponylang/ponyc/pull/1755&#34;&gt;PR #1755&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fix false positive test failure on 32 bits (&lt;a href=&#34;https://github.com/ponylang/ponyc/pull/1749&#34;&gt;PR #1749&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;added&#34;&gt;Added&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Support XCode 8.3 and LLVM 3.9 (&lt;a href=&#34;https://github.com/ponylang/ponyc/pull/1765&#34;&gt;PR #1765&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;changed&#34;&gt;Changed&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Arrays as sequences (&lt;a href=&#34;https://github.com/ponylang/ponyc/pull/1741&#34;&gt;PR #1741&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Last Week in Pony - March 28, 2017</title>
      <link>http://www.ponylang.org/blog/2017/03/last-week-in-pony/</link>
      <pubDate>Tue, 28 Mar 2017 12:48:57 -0400</pubDate>
      
      <guid>http://www.ponylang.org/blog/2017/03/last-week-in-pony/</guid>
      <description>&lt;p&gt;Last Week In Pony is a weekly blog post to catch you up on the latest news for
the Pony programming language. To learn more about Pony check out &lt;a href=&#34;ponylang.org&#34;&gt;our website&lt;/a&gt;, our Twitter account &lt;a href=&#34;https://twitter.com/ponylang&#34;&gt;@ponylang&lt;/a&gt;, our &lt;a href=&#34;https://pony.groups.io/g/user&#34;&gt;users&amp;rsquo; mailing list&lt;/a&gt; or join us &lt;a href=&#34;https://webchat.freenode.net/?channels=%23ponylang&#34;&gt;on IRC&lt;/a&gt;.
&lt;/p&gt;

&lt;h2 id=&#34;items-of-note&#34;&gt;Items of note&lt;/h2&gt;

&lt;h3 id=&#34;version-0-11-4-released&#34;&gt;Version 0.11.4 Released!&lt;/h3&gt;

&lt;p&gt;Version 0.11.4 has been released, with the full &lt;a href=&#34;https://pony.groups.io/g/user/topic/pony_0_11_4_has_been_released/4652245?p=,,,20,0,0,0::recentpostdate%2Fsticky,,,20,2,0,4652245&#34;&gt;release notes here&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;news-and-blog-posts&#34;&gt;News and Blog Posts&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://docs.google.com/forms/d/e/1FAIpQLScBNr5dPPCVYchRukAm-sFR3wipndVJiua3xHr8CslohVFRlg/viewform?c=0&amp;amp;w=1&amp;amp;usp=send_form&#34;&gt;Pony Community Survey&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://engineering.sendence.com/2017/03/hello-wallaroo/&#34;&gt;Hello Wallaroo!&lt;/a&gt; A brief introduction to Sendence&amp;rsquo;s Wallaroo, written in Pony.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://pony.groups.io/g/dev/files/Pony%20Sync/March%2022,%202017&#34;&gt;Developer Sync Meeting&lt;/a&gt; This weeks developer sync meeting.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;rfcs&#34;&gt;RFCs&lt;/h2&gt;

&lt;p&gt;Interested in making a change, or keeping up with changes to Pony? Check out the &lt;a href=&#34;https://github.com/ponylang/rfcs&#34;&gt;RFC repo&lt;/a&gt;. Contributors welcome!&lt;/p&gt;

&lt;h3 id=&#34;approved-rfcs&#34;&gt;Approved RFCs&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ponylang/rfcs/pull/84&#34;&gt;Arrays As Sequences&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;ready-for-vote&#34;&gt;Ready For Vote&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ponylang/rfcs/pull/82&#34;&gt;Explicit Partial Call&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;final-comment-period&#34;&gt;Final Comment Period&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/ponylang/rfcs/pull/86&#34;&gt;Exhaustive Pattern Matching&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/ponylang/rfcs/pull/85&#34;&gt;Add a TCPConnectNotify.received times parameter&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;new-rfcs&#34;&gt;New RFCs&lt;/h3&gt;

&lt;p&gt;There have been no new RFCs this week.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>State of the Stable 2016</title>
      <link>http://www.ponylang.org/blog/2016/03/state-of-the-stable-2016/</link>
      <pubDate>Sat, 12 Mar 2016 12:48:57 -0400</pubDate>
      
      <guid>http://www.ponylang.org/blog/2016/03/state-of-the-stable-2016/</guid>
      <description>&lt;p&gt;Hi there and welcome to the summary of the Pony 2016 &amp;ldquo;State of the Stable&amp;rdquo; community survey. It was the first of what will hopefully become an annual tradition. We&amp;rsquo;d like to thank everyone who took time to answer the survey, especially those of you who took the time to answer the free form questions. There are some very thoughtful answers sprinkled through there. Also a big thank you to everyone who let us know they appreciate the work we are doing. Open source software is often a thankless task and your words of encouragement mean a lot.
&lt;/p&gt;

&lt;p&gt;We asked far more questions this year than we plan to ask in the future. In large part, because there were several basic questions that wanted to get answered. If you visit the &lt;a href=&#34;https://seantallen.wufoo.com/reports/state-of-the-stable/&#34;&gt;Wufoo report&lt;/a&gt;, you can see the answers to all the multiple choice questions as well as download the complete data set.&lt;/p&gt;

&lt;h2 id=&#34;highlights&#34;&gt;Highlights&lt;/h2&gt;

&lt;p&gt;Almost 49% of respondents said they were planning on doing web development with Pony. We didn&amp;rsquo;t see this coming at all. It was quite a surprise. That simple &amp;ldquo;you could write an HTTP server&amp;rdquo; in Pony looks like it needs to be replaced by the real thing. If you are one of the people who answered that they are looking to do web development with Pony, we&amp;rsquo;d love to hear more from you on the &lt;a href=&#34;https://groups.io/g/pony+dev&#34;&gt;Pony+dev mailing list&lt;/a&gt; about what you need to make Pony a viable web development platform for you.&lt;/p&gt;

&lt;p&gt;Respondents tend to have a lot of programming experience. Over 70% have more than 10 years of experience while less than 5% have less than 5 years experience. Our first reaction was &amp;ldquo;that makes sense, people with more experience are more likely to have experienced the pain that other concurrency models can create&amp;rdquo;. However, we also started to wonder how much of that is selection bias. Is there a way that we can market Pony that would appeal to people with less experience? They core Pony team has a lot of experience and we might be unintentionally appealing to people like us. It&amp;rsquo;s something we are looking at.&lt;/p&gt;

&lt;p&gt;There&amp;rsquo;s a lot of dynamic languages showing up in the languages that people are using. How many users are using just dynamic languages? Turns out it’s only a couple of respondents. However, there are a few others who appear to be primarily using dynamic languages with a static one thrown in. In general, you appear to be a pretty polyglot group. There&amp;rsquo;s no &amp;ldquo;one language&amp;rdquo; that Pony is drawing a lot of interest from, it&amp;rsquo;s pretty spread out. To address that, we are looking at doing &amp;ldquo;Pony for Erlangers&amp;rdquo;, &amp;ldquo;Pony for C++ers&amp;rdquo;, &amp;ldquo;Pony for Rubyists&amp;rdquo; etc intro docs. If you&amp;rsquo;d be interesting writing any such document, please stop by the &lt;a href=&#34;https://groups.io/g/pony+dev&#34;&gt;Pony+dev mailing list&lt;/a&gt; and let us know.&lt;/p&gt;

&lt;p&gt;The vast majority of respondents (over 70%) are just checking out the language. Hopefully we can pull some of those people in as full time users. Based on some of the free form feedback, we know that there are areas of the documentation that we need to address in order to do that. That 18% of you said that you are using Pony for serious hobby projects was a really big boost to our morale. It means a lot to know people are doing &amp;ldquo;real work&amp;rdquo; with our creation. One side note from Sean, it&amp;rsquo;s obvious that his coworkers didn&amp;rsquo;t fill out the survey otherwise there&amp;rsquo;d be several more &amp;ldquo;I use it at work&amp;rdquo; entries. Consider yourself shamed if you work with him.&lt;/p&gt;

&lt;p&gt;Documentation&amp;hellip; well, thanks folks. You said nicer things about the Pony documentation than we do. That said, a lot of the free form feedback was focused on documentation. In particular, documentation around reference capabilities. We have work underway to address documentation and it will be a point of emphasis going forward. Hopefully by the end of the year, we&amp;rsquo;ll have some awesome, beginner friendly documentation that will rival the languages that some of you brought up as favorites (and to the people who brought up Rust and Elm compiler error friendliness as goals to shoot for: we heard you, it’s something that was already on the roadmap, but oh yeah, we heard you).&lt;/p&gt;

&lt;p&gt;To the over 50% of respondents who said they wish there was a Pony User Group in your area, how would you feel about joining a virtual meetup group that meets over something like &lt;a href=&#34;https://www.crowdcast.io/&#34;&gt;Crowdcast&lt;/a&gt; or a combo of something like &lt;a href=&#34;https://zoom.us&#34;&gt;Zoom&lt;/a&gt; and &lt;a href=&#34;https://slack.com&#34;&gt;Slack&lt;/a&gt;? &lt;a href=&#34;https://groups.io/g/pony+user/message/145&#34;&gt;We&amp;rsquo;d love to hear from you on that&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;our-message-to-you&#34;&gt;Our message to you&lt;/h2&gt;

&lt;p&gt;Thank you for taking the time to give us feedback. It means a ton. This isn&amp;rsquo;t meant to be a roadmap but we want to let you know that several of the issues you brought up are things we are working on including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Improved documentation/More examples&lt;/li&gt;
&lt;li&gt;Better packaging/easier installation&lt;/li&gt;
&lt;li&gt;Distributed Pony&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We&amp;rsquo;d love your help. If you are interested in assisting, please join the &lt;a href=&#34;https://groups.io/g/pony+dev&#34;&gt;Pony+Dev mailing list&lt;/a&gt; and &lt;a href=&#34;http://www.ponylang.org/contribute/&#34;&gt;check out some of the ways that anyone can contribute&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;See y&amp;rsquo;all next year,
The Pony core team&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Code of Conduct</title>
      <link>http://www.ponylang.org/community/code-of-conduct/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.ponylang.org/community/code-of-conduct/</guid>
      <description>

&lt;p&gt;In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.&lt;/p&gt;

&lt;p&gt;In addition to having a code of conduct as an anti-harassment policy, we have a small set of &lt;a href=&#34;https://www.recurse.com/manual#sub-sec-social-rules&#34;&gt;social rules&lt;/a&gt; we follow. We (the project maintainers) lifted these rules from the &lt;a href=&#34;https://www.recurse.com&#34;&gt;Recurse Center&lt;/a&gt;. We&amp;rsquo;ve seen these rules in effect in other environments. We&amp;rsquo;d like Pony community to share a similar positive environment. These rules are intended to be lightweight, and to make more explicit certain social norms that  are normally implicit. Most of our social rules really boil down to “don&amp;rsquo;t be a  jerk“ or “don&amp;rsquo;t be annoying.” Of course, almost nobody sets out to be a jerk or annoying, so telling people not to be jerks isn&amp;rsquo;t a very productive strategy.&lt;/p&gt;

&lt;p&gt;Unlike the anti-harassment policy, violation of the social rules will not result in expulsion from the Pony community or a strong warning from project maintainers. Rather, they are designed to provide some lightweight social structure for community members to use when interacting with each other.&lt;/p&gt;

&lt;h2 id=&#34;code-of-conduct&#34;&gt;Code of Conduct&lt;/h2&gt;

&lt;h3 id=&#34;our-standards&#34;&gt;Our Standards&lt;/h3&gt;

&lt;p&gt;Examples of behavior that contributes to creating a positive environment include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Using welcoming and inclusive language&lt;/li&gt;
&lt;li&gt;Being respectful of differing viewpoints and experiences&lt;/li&gt;
&lt;li&gt;Gracefully accepting constructive criticism&lt;/li&gt;
&lt;li&gt;Focusing on what is best for the community&lt;/li&gt;
&lt;li&gt;Showing empathy towards other community members&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Examples of unacceptable behavior by participants include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The use of sexualized language or imagery and unwelcome sexual attention or
advances&lt;/li&gt;
&lt;li&gt;Trolling, insulting/derogatory comments, and personal or political attacks&lt;/li&gt;
&lt;li&gt;Public or private harassment&lt;/li&gt;
&lt;li&gt;Publishing others&amp;rsquo; private information, such as a physical or electronic
address, without explicit permission&lt;/li&gt;
&lt;li&gt;Other conduct which could reasonably be considered inappropriate in a
professional setting&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;our-responsibilities&#34;&gt;Our Responsibilities&lt;/h3&gt;

&lt;p&gt;Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.&lt;/p&gt;

&lt;p&gt;Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.&lt;/p&gt;

&lt;h3 id=&#34;scope&#34;&gt;Scope&lt;/h3&gt;

&lt;p&gt;This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.&lt;/p&gt;

&lt;h3 id=&#34;enforcement&#34;&gt;Enforcement&lt;/h3&gt;

&lt;p&gt;Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at coc@ponylang.org. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.&lt;/p&gt;

&lt;p&gt;Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project&amp;rsquo;s leadership.&lt;/p&gt;

&lt;h3 id=&#34;attribution&#34;&gt;Attribution&lt;/h3&gt;

&lt;p&gt;This Code of Conduct is adapted from the &lt;a href=&#34;http://contributor-covenant.org&#34;&gt;Contributor Covenant&lt;/a&gt;, version 1.4, available at &lt;a href=&#34;http://contributor-covenant.org/version/1/4/&#34;&gt;http://contributor-covenant.org/version/1/4&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;social-rules&#34;&gt;Social Rules&lt;/h2&gt;

&lt;h3 id=&#34;no-feigning-surprise&#34;&gt;No feigning surprise.&lt;/h3&gt;

&lt;p&gt;The first rule means you shouldn&amp;rsquo;t act surprised when people say they don&amp;rsquo;t know something. This applies to both technical things (&amp;ldquo;What?! I can&amp;rsquo;t believe you don&amp;rsquo;t know what the stack is!&amp;rdquo;) and non-technical things (&amp;ldquo;You don&amp;rsquo;t know who RMS is?!&amp;rdquo;). Feigning surprise has absolutely no social or educational benefit: When people feign surprise, it&amp;rsquo;s usually to make them feel better about themselves and others feel worse. And even when that&amp;rsquo;s not the intention, it&amp;rsquo;s almost always the effect.&lt;/p&gt;

&lt;h3 id=&#34;no-well-actually-s&#34;&gt;No well-actually&amp;rsquo;s&lt;/h3&gt;

&lt;p&gt;A well-actually happens when someone says something that&amp;rsquo;s almost - but not entirely - correct, and you say, &amp;ldquo;well, actually…&amp;rdquo; and then give a minor correction. This is especially annoying when the correction has no bearing on the actual conversation. This doesn&amp;rsquo;t mean we aren&amp;rsquo;t about truth-seeking or that we don&amp;rsquo;t care about being precise. Almost all well-actually&amp;rsquo;s in our experience are about grandstanding, not truth-seeking.&lt;/p&gt;

&lt;h3 id=&#34;no-subtle-isms&#34;&gt;No subtle -isms&lt;/h3&gt;

&lt;p&gt;Our last social rule bans subtle racism, sexism, homophobia, transphobia, and other kinds of bias. This one is different from the rest, because it covers a class of behaviors instead of one very specific pattern.&lt;/p&gt;

&lt;p&gt;Subtle -isms are small things that make others feel uncomfortable, things that we all sometimes do by mistake. For example, saying &amp;ldquo;It&amp;rsquo;s so easy my grandmother could do it&amp;rdquo; is a subtle -ism. Like the other three social rules, this one is often accidentally broken. Like the other three, it&amp;rsquo;s not a big deal to mess up – you just apologize and move on.&lt;/p&gt;

&lt;p&gt;If you see a subtle -ism in the Pony community , you can point it out to the relevant person, either publicly or privately, or you can ask one of the project maintainers to say something. After this, we ask that all further discussion move off of public channels. If you are a third party, and you don&amp;rsquo;t see what could be biased about the comment that was made, feel free to talk to the project maintainers. Please don&amp;rsquo;t say, &amp;ldquo;Comment X wasn&amp;rsquo;t homophobic!&amp;rdquo; Similarly, please don&amp;rsquo;t pile on to someone who made a mistake. The &amp;ldquo;subtle&amp;rdquo; in &amp;ldquo;subtle -isms&amp;rdquo; means that it&amp;rsquo;s probably not obvious to everyone right away what was wrong with the comment.&lt;/p&gt;

&lt;p&gt;If you have any questions about any part of the code of conduct or social rules, please feel free to reach out to any of the project maintainers.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Community</title>
      <link>http://www.ponylang.org/community/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.ponylang.org/community/</guid>
      <description>

&lt;h2 id=&#34;code-of-conduct&#34;&gt;Code of Conduct&lt;/h2&gt;

&lt;p&gt;We are committed to providing a friendly, safe and welcoming environment for all, regardless of gender, sexual orientation, disability, ethnicity, religion, or similar personal characteristic. Our &lt;a href=&#34;http://www.ponylang.org/community/code-of-conduct/&#34;&gt;code of conduct&lt;/a&gt; sets the standards for behavior in all official Pony forums.&lt;/p&gt;

&lt;h2 id=&#34;getting-started&#34;&gt;Getting Started&lt;/h2&gt;

&lt;p&gt;The most important community resources for those who are new to Pony are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;#ponylang, our IRC channel on &lt;a href=&#34;https://webchat.freenode.net/?channels=%23ponylang&#34;&gt;freenode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The &lt;a href=&#34;https://pony.groups.io/g/user&#34;&gt;Users Mailing List&lt;/a&gt; for discussion of all things Pony that don&amp;rsquo;t involve the development of Pony itself&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you are looking for help with Pony and can&amp;rsquo;t get a response in #ponylang, we advise that you send an email to the Users Mailing List.&lt;/p&gt;

&lt;h2 id=&#34;news&#34;&gt;News&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ponylang.org/blog&#34;&gt;News, blog, whatever you want to call it&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;talks-articles-and-more&#34;&gt;Talks, Articles and more&lt;/h2&gt;

&lt;p&gt;There should be more than just a list link here. Intro text etc,
but, that can come later.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ponylang.org/community/planet-pony/&#34;&gt;Planet Pony&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;chat&#34;&gt;Chat&lt;/h2&gt;

&lt;p&gt;If you are interested in having a real time conversation about Pony, your best bet is the #ponylang IRC channel on &lt;a href=&#34;https://freenode.net&#34;&gt;freenode&lt;/a&gt;. &lt;a href=&#34;https://irclog.whitequark.org/ponylang/&#34;&gt;Public logs for #ponylang&lt;/a&gt; are available if you need to catch up on conversation.&lt;/p&gt;

&lt;h2 id=&#34;mailing-lists&#34;&gt;Mailing Lists&lt;/h2&gt;

&lt;p&gt;We host all our mailing lists with &lt;a href=&#34;https://groups.io&#34;&gt;groups.io&lt;/a&gt;. You&amp;rsquo;ll need a &lt;a href=&#34;https://groups.io/register&#34;&gt;groups.io account&lt;/a&gt; to sign up for any of our mailing lists. By joining any of the Pony mailing lists, you will also be automatically added to &lt;a href=&#34;https://pony.groups.io/g/pony&#34;&gt;an announce only broadcast list&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you are a Pony user looking for assistance or to  discuss writing Pony code, you&amp;rsquo;ll want to join the &lt;a href=&#34;https://pony.groups.io/g/user&#34;&gt;Users&amp;rsquo; mailing list&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you are looking to contribute to Pony, you&amp;rsquo;ll want to join the &lt;a href=&#34;https://pony.groups.io/g/dev&#34;&gt;Developers&amp;rsquo; mailing list&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you are interested in finding out when our Virtual Users&amp;rsquo; Group is meeting or when new videos are posted, you should join the &lt;a href=&#34;https://pony.groups.io/g/vug&#34;&gt;Virtual Users&amp;rsquo; Group mailing list&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;users-groups&#34;&gt;Users&amp;rsquo; Groups&lt;/h2&gt;

&lt;p&gt;We currenly have 3 users&amp;rsquo; groups; one virtual and two in-person. At this time, the New York City and London users&amp;rsquo; groups rarely meet. Your best bet for a users&amp;rsquo; group at this time is the  &lt;a href=&#34;https://pony.groups.io/g/vug&#34;&gt;Virtual Users&amp;rsquo; Group&lt;/a&gt;. In general, it meets about once a month via &lt;a href=&#34;https://zoom.us&#34;&gt;Zoom&lt;/a&gt;.
&lt;a href=&#34;https://vimeo.com/search/sort:latest?q=pony-vug&#34;&gt;Videos&lt;/a&gt; of past presentations are available.&lt;/p&gt;

&lt;p&gt;If you&amp;rsquo;d like to attend an in-person meetup, sign up for the mailing list to be informed the next time a meeting is occuring:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://pony.groups.io/g/london&#34;&gt;London Users&amp;rsquo; Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pony.groups.io/g/nyc&#34;&gt;New York City Users&amp;rsquo; Group&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you are interested in setting up a users&amp;rsquo; group in your area and would like to host the mailing list on groups.io, drop us a line and we&amp;rsquo;ll get you set up.&lt;/p&gt;

&lt;h2 id=&#34;community-survey&#34;&gt;Community Survey&lt;/h2&gt;

&lt;p&gt;We run a yearly community survey to find out what the Pony community currently looks like. So far, &amp;ldquo;yearly&amp;rdquo; means &amp;ldquo;once&amp;rdquo;. If you are interested in learning a bit more about the community you&amp;rsquo;ll be joining, check out the &lt;a href=&#34;http://www.ponylang.org/blog/2016/03/state-of-the-stable-2016/&#34;&gt;2016 State of the Stable&lt;/a&gt; community survey&lt;/p&gt;

&lt;h2 id=&#34;pony-development&#34;&gt;Pony Development&lt;/h2&gt;

&lt;p&gt;If you are interested in helping to develop Pony, we have a &lt;a href=&#34;http://www.ponylang.org/contribute/&#34;&gt;variety of resources&lt;/a&gt; to get you started.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Contribute</title>
      <link>http://www.ponylang.org/contribute/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.ponylang.org/contribute/</guid>
      <description>

&lt;p&gt;Interested in helping develop Pony? Awesome. We could use the help. Here&amp;rsquo;s a list of projects that are currently underway that you can assist with. If none of them interest you, drop a note to the &lt;a href=&#34;https://pony.groups.io/g/dev&#34;&gt;pony+dev mailing list&lt;/a&gt; and we should be able to find something that suits your interests.&lt;/p&gt;

&lt;p&gt;Note sure where to start?&lt;/p&gt;

&lt;p&gt;If you are new to Pony or don&amp;rsquo;t have a ton of time to devout to helping, we suggest you check out Project Documentation and helping to improve our docs. Contributing to documentation is a great way to start learning Pony. Teaching a subject is an incredible way to learn the subject.&lt;/p&gt;

&lt;p&gt;If you are new to Pony and have more time to devote, check out the Low Hanging Fruit. Tackle stuff from that and if we run out, switch over to helping with documentation.&lt;/p&gt;

&lt;p&gt;If are a bit more experienced with Pony then it might be time to get involved with triaging incoming issues. Not only will triaging help move the project forward but its a common first step towards becoming a Pony committer.&lt;/p&gt;

&lt;h2 id=&#34;triage-incoming-issues&#34;&gt;Triage incoming issues&lt;/h2&gt;

&lt;p&gt;Users regularly open issues against the &lt;a href=&#34;https://github.com/ponylang/ponyc/issues&#34;&gt;ponyc repository&lt;/a&gt;. Staying on top of them and moving them along to conclusion is an important part of the development process. If you&amp;rsquo;d be interested in helping in this area, please check out our &lt;a href=&#34;triage&#34;&gt;triaging ponyc documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;project-documentation&#34;&gt;Project Documentation&lt;/h2&gt;

&lt;p&gt;Documentation is the life blood of an Open Source project. It makes it easier for get new users up and running with the language. Our ability to grow Pony usage will be directly tied to the quality and breadth of our documentation. Assisting with adding documentation for Pony is a great way to get started helping out with Pony. Check out &lt;a href=&#34;project-documentation&#34;&gt;Project Documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;low-hanging-fruit&#34;&gt;Low Hanging Fruit&lt;/h2&gt;

&lt;p&gt;When issues come in to the ponyc GitHub project, as part of our initial triaging of issues, some get marked as easy. The general idea behind the easy label to make it simple for people who want to contribute to Pony but don&amp;rsquo;t have much time or knowledge about Pony to be able to contribute. Low hanging fruit issues such as these are a great way to get started with contributing and start learning more about Pony. Check out the &lt;a href=&#34;https://github.com/ponylang/ponyc/issues?q=is%3Aissue+is%3Aopen+label%3A%22difficulty%3A+1+-+easy%22&#34;&gt;Low Hanging Fruit&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Discover</title>
      <link>http://www.ponylang.org/discover/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.ponylang.org/discover/</guid>
      <description>

&lt;h2 id=&#34;what-is-pony&#34;&gt;What is Pony?&lt;/h2&gt;

&lt;p&gt;Pony is an open-source, object-oriented, &lt;a href=&#34;https://en.wikipedia.org/wiki/Actor_model&#34;&gt;actor-model&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/Capability-based_security&#34;&gt;capabilities-secure&lt;/a&gt;, high performance programming language.&lt;/p&gt;

&lt;h2 id=&#34;what-makes-pony-different&#34;&gt;What makes Pony different?&lt;/h2&gt;

&lt;h3 id=&#34;pony-is-type-safe&#34;&gt;Pony is type safe&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Really type safe&lt;/em&gt;. There&amp;rsquo;s a mathematical &lt;a href=&#34;http://www.ponylang.org/media/papers/fast-cheap.pdf&#34;&gt;proof&lt;/a&gt; and everything.&lt;/p&gt;

&lt;h3 id=&#34;pony-is-memory-safe&#34;&gt;Pony is memory safe&lt;/h3&gt;

&lt;p&gt;There are no dangling pointers and no buffer overruns. The language doesn&amp;rsquo;t even have the concept of null!&lt;/p&gt;

&lt;h3 id=&#34;exception-safe&#34;&gt;Exception Safe&lt;/h3&gt;

&lt;p&gt;There are no runtime exceptions. All exceptions have defined semantics, and they are &lt;em&gt;always&lt;/em&gt; caught.&lt;/p&gt;

&lt;h3 id=&#34;data-race-free&#34;&gt;Data-race Free&lt;/h3&gt;

&lt;p&gt;Pony doesn&amp;rsquo;t have locks or atomic operations or anything like that. Instead, the type system ensures at compile time that your concurrent program can never have data races. So you can write highly concurrent code and never get it wrong.&lt;/p&gt;

&lt;h3 id=&#34;deadlock-free&#34;&gt;Deadlock Free&lt;/h3&gt;

&lt;p&gt;This one is easy, because Pony has no locks at all! So they definitely don&amp;rsquo;t deadlock, because they don&amp;rsquo;t exist!&lt;/p&gt;

&lt;h3 id=&#34;native-code&#34;&gt;Native Code&lt;/h3&gt;

&lt;p&gt;Pony is a ahead-of-time (AOT) compiled language. There is no interpreter or virtual machine.&lt;/p&gt;

&lt;h3 id=&#34;compatible-with-c&#34;&gt;Compatible with C&lt;/h3&gt;

&lt;p&gt;Pony programs can natively call C libraries. Our compiler is able to generate a C-header file for Pony libraries. Consequently, C/C++ programs can natively call Pony programs!&lt;/p&gt;

&lt;h2 id=&#34;why-pony&#34;&gt;Why Pony?&lt;/h2&gt;

&lt;p&gt;There&amp;rsquo;s plenty to love about Pony, but more than anything else, what we love most is that Pony makes it easy to write fast, safe, efficient, highly concurrent programs. How? The Pony type system introduces a novel concept: &amp;ldquo;reference capabilities&amp;rdquo;. &lt;a href=&#34;https://tutorial.ponylang.org/capabilities/reference-capabilities.html&#34;&gt;Reference capabilities&lt;/a&gt; allow you to label different bits of data based on how that data can be shared. The Pony compiler will then verify that you are in fact correctly using the data based on the labels you provide. Reference capabilities combined with Pony&amp;rsquo;s actor model of concurrency are a powerful pairing. Let&amp;rsquo;s dig in a take a quick look:&lt;/p&gt;

&lt;h3 id=&#34;mutable-state-is-hard&#34;&gt;Mutable state is hard&lt;/h3&gt;

&lt;p&gt;The problem with concurrency is shared mutable data. If two different threads have access to the same piece of data then they might try to update it at the same time. At best this can lead to the two threads having different versions of the data. At worst the updates can interact badly resulting in the data being overwritten with garbage. The standard way to avoid these problems is to use locks to prevent data updates from happening at the same time. This causes big performance hits and is very difficult to get right, so it causes lots of bugs.&lt;/p&gt;

&lt;h3 id=&#34;immutable-data-can-be-safely-shared&#34;&gt;Immutable data can be safely shared&lt;/h3&gt;

&lt;p&gt;Any data that is immutable (i.e. it cannot be changed) is safe to use concurrently. Since it is immutable it is never updated and it&amp;rsquo;s the updates that cause concurrency problems.&lt;/p&gt;

&lt;h3 id=&#34;isolated-data-is-safe&#34;&gt;Isolated data is safe&lt;/h3&gt;

&lt;p&gt;If a block of data has only one reference to it then we call it &lt;em&gt;isolated&lt;/em&gt;. Since there is only one reference to it, isolated data cannot be &lt;em&gt;shared&lt;/em&gt; by multiple threads, so there are no concurrency problems. Isolated data can be passed between multiple threads. As long as only one of them has a reference to it at a time then the data is still safe from concurrency problems.&lt;/p&gt;

&lt;h3 id=&#34;every-actor-is-single-threaded&#34;&gt;Every actor is single threaded&lt;/h3&gt;

&lt;p&gt;The code within a single actor is never run concurrently. This means that, within a single actor, data updates cannot cause problems. It&amp;rsquo;s only when we want to share data between actors that we have problems.&lt;/p&gt;

&lt;h3 id=&#34;reference-capabilities-enforce-safe-data-handling&#34;&gt;Reference capabilities enforce safe data handling&lt;/h3&gt;

&lt;p&gt;By sharing only immutable data and exchanging only isolated data we can have safe concurrent programs without locks. The problem is that it&amp;rsquo;s very difficult to do that correctly. If you accidentally hang on to a reference to some isolated data you&amp;rsquo;ve handed over or change something you&amp;rsquo;ve shared as immutable then everything goes wrong. What you need is for the compiler to force you to live up to your promises. Pony reference capabilities allow the compiler to do just that.&lt;/p&gt;

&lt;p&gt;If you ask us, that&amp;rsquo;s pretty damn cool and a hell of a reason to give Pony a try.&lt;/p&gt;

&lt;h2 id=&#34;why-not-pony&#34;&gt;Why not Pony?&lt;/h2&gt;

&lt;p&gt;There are many valid reasons to not use Pony. Amongst these are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Lack of API stability&lt;/li&gt;
&lt;li&gt;Lack of high quality 3rd party libraries&lt;/li&gt;
&lt;li&gt;Limited native tooling&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;api-stability&#34;&gt;API stability&lt;/h3&gt;

&lt;p&gt;Pony is pre-1.0. We regularly have releases that involve breaking changes. This lack of stability is plenty of reason for many projects to avoid using Pony.&lt;/p&gt;

&lt;h3 id=&#34;batteries-required&#34;&gt;Batteries required&lt;/h3&gt;

&lt;p&gt;If your project is going to succeed or fail based on the size of community around the tools you are using, Pony is not a good choice for you. While its possible to write stable, high-performance applications using Pony, you will have to do a decent amount of work. The pool of open source, ready to use Pony libraries is very small. If it&amp;rsquo;s not in the standard library than odds are you are going to have to add it yourself, either by writing it from scratch in Pony or by wrapping an existing C library using Pony&amp;rsquo;s excellent &lt;a href=&#34;https://tutorial.ponylang.org/c-ffi/&#34;&gt;C-FFI&lt;/a&gt; functionality.&lt;/p&gt;

&lt;h3 id=&#34;tooling&#34;&gt;Tooling&lt;/h3&gt;

&lt;p&gt;There&amp;rsquo;s a wide swath of tooling that some people have come to expect that isn&amp;rsquo;t currently available for Pony. We don&amp;rsquo;t have an IDE. You can use standard debuggers like gdb or lldb but the experience still has some rough edges. If you are comfortable working with a basic text editor and using lldb, vtune and other tools, you&amp;rsquo;ll probably be ok. Just don&amp;rsquo;t expect a full, robust ecosystem. We aren&amp;rsquo;t there yet.&lt;/p&gt;

&lt;p&gt;If your project isn&amp;rsquo;t going to get a great deal of benefit from any of Pony&amp;rsquo;s strengths, then you shouldn&amp;rsquo;t use Pony. If you are writing a single threaded application without any overriding performance concerns, and you need access to a large community and wealth of libraries then you&amp;rsquo;re much better off selecting another language. However, we hope that you see enough potential in Pony to start playing around with it even if it isn&amp;rsquo;t right for your current project.&lt;/p&gt;

&lt;h2 id=&#34;the-pony-philosophy&#34;&gt;The Pony Philosophy&lt;/h2&gt;

&lt;p&gt;In the spirit of &lt;a href=&#34;http://www.jwz.org/doc/worse-is-better.html&#34;&gt;Richard Gabriel&lt;/a&gt;, the Pony philosophy is neither &amp;ldquo;the-right-thing&amp;rdquo; nor &amp;ldquo;worse-is-better&amp;rdquo;. It is &amp;ldquo;get-stuff-done&amp;rdquo;.&lt;/p&gt;

&lt;h3 id=&#34;correctness&#34;&gt;Correctness&lt;/h3&gt;

&lt;p&gt;Incorrectness is simply not allowed. &lt;em&gt;It&amp;rsquo;s pointless to try to get stuff done if you can&amp;rsquo;t guarantee the result is correct.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;performance&#34;&gt;Performance&lt;/h3&gt;

&lt;p&gt;Runtime speed is more important than everything except correctness. If performance must be sacrificed for correctness, try to come up with a new way to do things. &lt;em&gt;The faster the program can get stuff done, the better. This is more important than anything except a correct result.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;simplicity&#34;&gt;Simplicity&lt;/h3&gt;

&lt;p&gt;Simplicity can be sacrificed for performance. It is more important for the interface to be simple than the implementation. &lt;em&gt;The faster the programmer can get stuff done, the better. It&amp;rsquo;s ok to make things a bit harder on the programmer to improve performance, but it&amp;rsquo;s more important to make things easier on the programmer than it is to make things easier on the language/runtime.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;consistency&#34;&gt;Consistency&lt;/h3&gt;

&lt;p&gt;Consistency can be sacrificed for simplicity or performance.
&lt;em&gt;Don&amp;rsquo;t let excessive consistency get in the way of getting stuff done.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;completeness&#34;&gt;Completeness&lt;/h3&gt;

&lt;p&gt;It&amp;rsquo;s nice to cover as many things as possible, but completeness can be sacrificed for anything else. &lt;em&gt;It&amp;rsquo;s better to get some stuff done now than wait until everything can get done later.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The &amp;ldquo;get-stuff-done&amp;rdquo; approach has the same attitude towards correctness and simplicity as &amp;ldquo;the-right-thing&amp;rdquo;, but the same attitude towards consistency and completeness as &amp;ldquo;worse-is-better&amp;rdquo;. It also adds performance as a new principle, treating it as the second most important thing (after correctness).&lt;/p&gt;

&lt;h2 id=&#34;guiding-principles&#34;&gt;Guiding Principles&lt;/h2&gt;

&lt;p&gt;Throughout the design and development of the language the following principles should be adhered to.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Use the get-stuff-done approach.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Simple grammar. Language must be trivial to parse for both humans and computers.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;No loadable code. Everything is known to the compiler.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Fully type safe. There is no &amp;ldquo;trust me, I know what I&amp;rsquo;m doing&amp;rdquo; coercion.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Fully memory safe. There is no &amp;ldquo;this random number is really a pointer, honest.&amp;rdquo;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;No crashes. A program that compiles should never crash (although it may hang or do something unintended).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Sensible error messages. Where possible use simple error messages for specific error cases. It is fine to assume the programmer knows the definitions of words in our lexicon, but avoid compiler or other computer science jargon.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Inherent build system. No separate applications required to configure or build.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Aim to reduce common programming bugs through the use of restrictive syntax.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Provide a single, clean and clear way to do things rather than catering to every programmer&amp;rsquo;s preferred prejudices.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Make upgrades clean. Do not try to merge new features with the ones they are replacing, if something is broken remove it and replace it in one go. Where possible provide rewrite utilities to upgrade source between language versions.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Reasonable build time. Keeping down build time is important, but less important than runtime performance and correctness.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Allowing the programmer to omit some things from the code (default arguments, type inference, etc) is fine, but fully specifying should always be allowed.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;No ambiguity. The programmer should never have to guess what the compiler will do, or vice-versa.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Document required complexity. Not all language features have to be trivial to understand, but complex features must have full explanations in the docs to be allowed in the language.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Language features should be minimally intrusive when not used.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Fully defined semantics. The semantics of all language features must be available in the standard language docs. It is not acceptable to leave behaviour undefined or &amp;ldquo;implementation dependent&amp;rdquo;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Efficient hardware access must be available, but this does not have to pervade the whole language.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The standard library should be implemented in Pony.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Interoperability. Must be interoperable with other languages, but this may require a shim layer if non primitive types are used.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Avoid library pain. Use of 3rd party Pony libraries should be as easy as possible, with no surprises. This includes writing and distributing libraries and using multiple versions of a library in a single program.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>FAQ</title>
      <link>http://www.ponylang.org/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.ponylang.org/faq/</guid>
      <description>

&lt;h2 id=&#34;compiling&#34;&gt;Compiling&lt;/h2&gt;

&lt;h3 id=&#34;i-get-a-requires-dynamic-error-when-compiling-how-do-i-solve-it&#34;&gt;I get a &amp;ldquo;requires dynamic&amp;rdquo; error when compiling, how do I solve it?&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;/usr/bin/ld.gold: error: ./fb.o: requires dynamic R_X86_64_32 
  reloc against &#39;Array_String_val_Trace&#39; which may 
  overflow at runtime; recompile with -fPIC
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;try running &lt;code&gt;ponyc&lt;/code&gt; with the &lt;code&gt;--pic&lt;/code&gt; flag.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ponyc --pic examples/helloworld
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Learn</title>
      <link>http://www.ponylang.org/learn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.ponylang.org/learn/</guid>
      <description>

&lt;p&gt;Ready to learn Pony? Awesome.&lt;/p&gt;

&lt;h2 id=&#34;getting-started&#34;&gt;Getting started&lt;/h2&gt;

&lt;p&gt;We have a couple resources designed to help you learn, we suggest starting with the tutorial and from there, moving on to the Pony Patterns book. Additionally, standard library documentation is available online.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://tutorial.ponylang.org&#34;&gt;Tutorial&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://patterns.ponylang.org&#34;&gt;Pony Patterns&lt;/a&gt; cookbook is in progress&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://ponylang.github.io/ponyc/&#34;&gt;Standard library docs&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;getting-help&#34;&gt;Getting help&lt;/h2&gt;

&lt;p&gt;If you run into trouble while you are learning Pony, don&amp;rsquo;t worry, we&amp;rsquo;ve got you covered. You have a couple different options on how you can get help from the Pony community. If you are looking for an answer &amp;ldquo;right now&amp;rdquo;, we suggest you give our IRC channel a try. It&amp;rsquo;s #ponylang on Freenode. If you ask a question, be sure to hang around until you get an answer. If you don&amp;rsquo;t get one, or IRC isn&amp;rsquo;t your thing, we have a friendly mailing list you can try. Whatever your question is, it isn&amp;rsquo;t dumb, and we won&amp;rsquo;t get annoyed.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://pony.groups.io/g/user&#34;&gt;Mailing list&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://webchat.freenode.net/?channels=%23ponylang&#34;&gt;IRC&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Think you&amp;rsquo;ve found a bug? It&amp;rsquo;s quite possible. Pony is a relatively young language that is still changing at a rapid pace and bugs do happen. Your best bet. Write to the mailing list with your issue and verify that you are experiencing an issue. Once a more knowledge member of the community confirms you are experiencing a bug, open an issue.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ponylang/ponyc/issues&#34;&gt;Open an issue&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Pony community while small is very helpful and inviting. We think you&amp;rsquo;ll find interacting with us to be an ejoyable experience. You can find a lot more community related resources in the &lt;a href=&#34;http://www.ponylang.org/community&#34;&gt;community section&lt;/a&gt; of this site.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Planet Pony</title>
      <link>http://www.ponylang.org/community/planet-pony/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.ponylang.org/community/planet-pony/</guid>
      <description>

&lt;p&gt;We don&amp;rsquo;t have a Pony blog aggregator at the moment, so in the meantime, we have this manually edited stand in. It&amp;rsquo;s like the &lt;a href=&#34;https://www.youtube.com/watch?v=TRAl48Ucgmw&#34;&gt;early curated days of Yahoo!&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;2017&#34;&gt;2017&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://vimeo.com/202387915&#34;&gt;Pony Vug #8: Andrew Turley: Prime Cuts: The Best Pieces Of Pony&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zestedesavoir.com/articles/1329/decouverte-du-langage-pony/&#34;&gt;Découverte du langage Pony&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;2016&#34;&gt;2016&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://soyyomakesgames.wordpress.com/2016/10/10/ponys-capabilities-made-simple/&#34;&gt;Pony Capabilities made simple&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://vimeo.com/187451870&#34;&gt;Pony VUG #7: Nick Pruhs: Designing an Actor Model Game Architecture with Pony &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linuxfestnorthwest.org/2016/sessions/pony-language-provably-safe-lockless-concurrency&#34;&gt;Pony - A Language for Provably Safe Lockless Concurrency&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=R6T8ytKV6dc&#34;&gt;Pony: Co-Designing a Type System and a Runtime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://vimeo.com/181099993&#34;&gt;Pony VUG #6: Andrew Turley: The Art of Forgetting - Garbage Collection in Pony&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zartstrom.github.io/pony/2016/08/28/reference-capabilities-in-pony.html&#34;&gt;Reference Capabilites in Pony for everybody&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://vimeo.com/178522513&#34;&gt;Pony VUG #5: George Steed: A Principled Design of Capabilities in Pony&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://vimeo.com/175746403&#34;&gt;Pony VUG #4: Simple Value-Dependent Types in Pony&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bluishcoder.co.nz/2016/07/18/borrowing-in-pony.html&#34;&gt;Borrowing in Pony&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://maniagnosis.crsr.net/2016/07/push-parsing.html&#34;&gt;Push-parsing and Pony&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://vimeo.com/172129187&#34;&gt;Pony VUG #3: The Actor Model and Pony&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://vimeo.com/168247590&#34;&gt;Pony VUG #2: Using the Pony FFI in Anger&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.infoq.com/presentations/pony&#34;&gt;Using Pony for Fintech&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.infoq.com/news/2016/03/pony-fintech&#34;&gt;Using the Actor-model Language Pony for FinTech&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bluishcoder.co.nz/2016/05/11/exploring-actors-in-pony.html&#34;&gt;Exploring actors in Pony&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bluishcoder.co.nz/2016/05/04/bang-hat-and-arrow-in-pony.html&#34;&gt;Bang, Hat and Arrow in Pony&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://vimeo.com/163871856&#34;&gt;Pony VUG #1: Writing Generic Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bluishcoder.co.nz/2016/03/15/closures-in-pony.html&#34;&gt;Closures in Pony&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jtfmumm.com/blog/2016/03/06/safely-sharing-data-pony-reference-capabilities/&#34;&gt;Safely Sharing Data: Reference Capabilities in Pony&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.monkeysnatchbanana.com/2016/01/18/pony-patterns-waiting/&#34;&gt;Pony Patterns: Waiting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.acolyer.org/2016/02/18/ownership-and-reference-counting-based-garbage-collection-in-the-actor-world/&#34;&gt;the morning paper: Ownership and Reference Counting Based Garbage Collection in the Actor World&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.acolyer.org/2016/02/17/deny-capabilities/&#34;&gt;the morning paper: Deny Capabilities for Safe, Fast Actors&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;2015&#34;&gt;2015&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.infoq.com/interviews/clebsch-pony&#34;&gt;Pony designer Sylvan Clebsch on the Actor-Model Language Pony, Garbage Collection, Capabilities, Concurrency&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.monkeysnatchbanana.com/2015/12/19/inside-the-pony-tcp-stack/&#34;&gt;Inside the Pony TCP Stack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bluishcoder.co.nz/2015/12/17/cross-compile-pony-programs-for-android.html&#34;&gt;Cross compile Pony programs for Android&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bluishcoder.co.nz/2015/12/16/c-linkable-libraries-with-pony.html&#34;&gt;C linkable libraries with Pony&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.monkeysnatchbanana.com/2015/12/13/deconstructing-a-pony-echo-server/&#34;&gt;Deconstructing a Pony echo server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cdn.rawgit.com/darach/my_little_pony/master/my-little-pony.html&#34;&gt;Presentation slides for &amp;ldquo;My Little Pony&amp;rdquo; talk at CodeMesh 2015 in London&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bluishcoder.co.nz/2015/11/04/a-quick-look-at-pony.html&#34;&gt;A quick look at the Pony Programming Language&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cdn.rawgit.com/sylvanc/pony-lecture/master/agere2015.html&#34;&gt;Presentation slides for &amp;ldquo;Deny Capabilities for Safe, Fast Actors&amp;rdquo; paper on Pony type system at Agere 2015 in Pittsburgh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://panopto.imperial.ac.uk/Panopto/Pages/Viewer.aspx?id=2e47f3d3-95e1-45c9-97fd-a9e4f35c66b3&#34;&gt;Part two of &amp;ldquo;Actor-based programming in Pony&amp;rdquo; at Imperial Programming Lectures in London&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://panopto.imperial.ac.uk/Panopto/Pages/Viewer.aspx?id=aba3f8f7-f050-447c-91c9-61e092d61e85&#34;&gt;Part one of &amp;ldquo;Actor-based programming in Pony&amp;rdquo; at Imperial Programming Lectures in London&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.piotrbuda.me/2015/05/implementing-chat-application-with-pony-lang.html&#34;&gt;Implementing chat application with Pony lang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=KvLjy8w1G_U&#34;&gt;Video of CurryOn presentation on Pony at ECOOP 2015&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.techcast.com/events/bigtechday8/pranner-1450/?q=pranner-1450&#34;&gt;Video of Pony talk at TNG Big Tech Day 2015&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.doc.ic.ac.uk/~scd/Pony-WG2.16.pdf&#34;&gt;Pony presentation by Prof. Sophia Drossopoulou at the IFIP WG 2.16 (Programming Language Design)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Pony</title>
      <link>http://www.ponylang.org/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.ponylang.org/</guid>
      <description>

&lt;p&gt;Welcome! This is the website for the Pony programming language. Pony is an open-source, object-oriented, actor-model, capabilities-secure, high performance programming language.&lt;/p&gt;

&lt;h2 id=&#34;getting-around&#34;&gt;Getting around&lt;/h2&gt;

&lt;p&gt;We&amp;rsquo;ve set up the website to be based on &lt;em&gt;who you are&lt;/em&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;New to Pony? &lt;a href=&#34;http://www.ponylang.org/discover/&#34;&gt;Start here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Learning Pony? &lt;a href=&#34;http://www.ponylang.org/learn/&#34;&gt;Start here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Existing Pony User looking for stuff? &lt;a href=&#34;http://www.ponylang.org/reference/&#34;&gt;Start here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Looking to Contribute to Pony? &lt;a href=&#34;http://www.ponylang.org/contribute/&#34;&gt;Start here&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>